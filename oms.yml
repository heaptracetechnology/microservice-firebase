oms: 1
info:
  version: 1.0.0
  title: firebase
  description: This is a firebase service
  contact:
    name: Open Microservices
    url: 'https://openmicroservices.org'
    email: core@openmicroservices.org
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
lifecycle:
  startup:
    command:
      - microservice-firebase
actions:
  sendMessageByToken:
    help: Send notification and data message using token.
    http:
      port: 3000
      method: post
      path: /sendMessageByToken
      contentType: application/json
    arguments:
      token:
        type: string
        in: requestBody
        required: false
        help: Registration token to send a message to.
      title:
        type: string
        in: requestBody
        required: false
        help: Title for notification object.
      body:
        type: string
        in: requestBody
        required: false
        help: Message body for notification object.
      data:
        type: map
        in: requestBody
        required: false
        help: The data object contains a list of key/value pairs.
      icon:
        type: string
        in: requestBody
        required: false
        help: The icon on notification bar
      registrationIds:
        type: list
        in: requestBody
        required: false
        help: List of registration ids of multiple devices.
      ttl:
        type: string
        in: requestBody
        required: false
        help: >-
          How long (in seconds) the message should be kept in FCM storage if the
          device is offline. The maximum time to live supported is 4 weeks, and
          the default value is 4 weeks if not set
    output:
      type: object
      contentType: application/json
      properties:
        ok:
          help: Boolean value which represents message sent is successful or failed.
          type: boolean
        status_code:
          help: HTTP status code for the response.
          type: int
        multicast_id:
          help: Unique ID (number) identifying the multicast message.
          type: int
        success:
          help: Number of messages that were processed without an error.
          type: int
        failure:
          help: Number of messages that could not be processed.
          type: int
        results:
          help: Array of objects representing the status of the messages processed.
          type: map
  sendMessageByTopic:
    help: Send notification and data message using topic.
    http:
      port: 3000
      method: post
      path: /sendMessageByTopic
      contentType: application/json
    arguments:
      topic:
        type: string
        in: requestBody
        required: true
        help: >-
          Topic name to send a message to, e.g. "weather". (Note- "/topics/"
          prefix should not be provided)
      token:
        type: string
        in: requestBody
        required: true
        help: Registration token to send a message to.
      ttl:
        type: string
        in: requestBody
        required: false
        help: >-
          How long (in seconds) the message should be kept in FCM storage if the
          device is offline. The maximum time to live supported is 4 weeks, and
          the default value is 4 weeks if not set
      title:
        type: string
        in: requestBody
        required: false
        help: Title for notification object.
      body:
        type: string
        in: requestBody
        required: false
        help: Message body for notification object.
      data:
        type: map
        in: requestBody
        required: false
        help: The data object contains a list of key/value pairs.
      icon:
        type: string
        in: requestBody
        required: false
        help: The icon on notification bar
    output:
      type: object
      contentType: application/json
      properties:
        ok:
          help: Boolean value which represents message sent is successful or failed.
          type: boolean
        status_code:
          help: HTTP status code for the response.
          type: int
        message_id:
          help: >-
            The topic message ID when FCM has successfully received the request
            and will attempt to deliver to all subscribed devices.
          type: int
        error:
          help: Error that occurred when processing the message.
          type: string
environment:
  SERVER_KEY:
    type: string
    required: true
    help: server key for firebase
